package controller;import entity.OderDetail;import entity.Product;import service.OderDetailService;import service.StaticVariable;import service.ProductService;import view.CustomerView;import view.OderView;import view.OderDetailView;import javax.swing.event.ListSelectionEvent;import javax.swing.event.ListSelectionListener;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;public class OderDetailController {    private ProductService productService;    private OderDetailService oderDetailService;    private OderDetailView oderDetailView;    private CustomerView customerView;    public OderDetailController(OderDetailView oderDetailView, CustomerView customerView) {        this.productService = new ProductService();        this.customerView = customerView;        this.oderDetailView = oderDetailView;        oderDetailService = new OderDetailService();        oderDetailView.addListProductSelectionListener(new ListProductSelectionListener() );        oderDetailView.addListOderDetailSelectionListener(new ListOderDetailSelectionListener());        oderDetailView.addAddProductListener(new AddProductListener());        oderDetailView.addClearProductListener(new ClearProductListener());        oderDetailView.addEditProductListener(new EditProductListener());        oderDetailView.addDeleteProductListener(new DeleteProductListener());        oderDetailView.backProductListener(new BackProductListener());        oderDetailView.editOderDetailListener(new EditOderDetailListener());        oderDetailView.deleteOderDetailListener(new DeleteOderDetailListener());        oderDetailView.addProductToOderListener(new AddProductToOderListener());    }    public void showProducts(){        oderDetailView.setVisible(true);        oderDetailView.showListProducts(productService.getProducts());        oderDetailView.showNameCustomer();    }    class ListProductSelectionListener implements ListSelectionListener {        public void valueChanged(ListSelectionEvent e) {            oderDetailView.fillProductFromSelectedRow();        }    }    class ListOderDetailSelectionListener implements ListSelectionListener {        public void valueChanged(ListSelectionEvent e) {            oderDetailView.fillOderDetailFromSelectedRow();        }    }    class AddProductListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            Product Product = oderDetailView.getProductInfo();            if (Product != null) {                productService.add(Product);                oderDetailView.showListProducts(productService.getProducts());                oderDetailView.showMessage("Thêm thành công!");            }        }    }    class AddProductToOderListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            OderDetail oderDetail = oderDetailView.getOderDetailAdd();            if (oderDetail != null) {                oderDetailService.add(oderDetail);                oderDetailView.showListProducts(productService.getProducts());                oderDetailView.showListOderDetail(oderDetailService.getOderDetailByOder(StaticVariable.oderId));                oderDetailView.showMessage("Thêm thành công!");            }else {                oderDetailView.showMessage("Thêm thất bai do bạn chưa chọn Product!");            }        }    }    class EditProductListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            Product Product = oderDetailView.getProductInfo();            if (Product != null) {                productService.edit(Product);                oderDetailView.showListProducts(productService.getProducts());                oderDetailView.showMessage("Sửa thành công!");            }        }    }    class EditOderDetailListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            OderDetail OderDetail = oderDetailView.getOderDetailEdit();            Product Product = oderDetailView.getProductInfo();            if (OderDetail != null) {                oderDetailService.edit(OderDetail, StaticVariable.oderId);                oderDetailView.showListOderDetail(oderDetailService.getOderDetailByOder(StaticVariable.oderId));                oderDetailView.showMessage("Sửa thành công!");            }        }    }    class ClearProductListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            oderDetailView.clearProductInfo();        }    }    class BackProductListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            oderDetailView.setVisible(false);            customerView.setVisible(true);        }    }    class DeleteProductListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            Product Product = oderDetailView.getProductInfo();            if (Product != null) {                productService.delete(Product.getId());                oderDetailView.showListProducts(productService.getProducts());                oderDetailView.showMessage("Xóa thành công!");            }        }    }    class DeleteOderDetailListener implements ActionListener {        public void actionPerformed(ActionEvent e) {            OderDetail OderDetail = oderDetailView.getOderDetailEdit();            Product Product = oderDetailView.getProductInfo();            if (OderDetail != null) {                oderDetailService.delete(OderDetail.getId());                oderDetailView.showListOderDetail(oderDetailService.getOderDetailByOder(StaticVariable.oderId));                oderDetailView.showMessage("Xóa thành công!");            }        }    }}